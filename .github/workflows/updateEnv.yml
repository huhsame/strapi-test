name: Deploy to EC2

on:
  workflow_dispatch:
  repository_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      env:
        SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        echo "$SSH_KEY" > private_key.pem
        chmod 600 private_key.pem

    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.HOST }}
        PORT: ${{ secrets.PORT }}
        APP_KEYS: ${{ secrets.APP_KEYS }}
        API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
        ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
        TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
        DATABASE_CLIENT: ${{ secrets.DATABASE_CLIENT }}
        DATABASE_FILENAME: ${{ secrets.DATABASE_FILENAME }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        EC2_SERVER_IP: ${{ secrets.EC2_SERVER_IP }}  # 서버 IP를 변수로 설정
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${EC2_SERVER_IP} "
        cd /home/ubuntu/strapi-test &&
        echo 'HOST=${HOST}' > .env &&
        echo 'PORT=${PORT}' >> .env &&
        echo 'APP_KEYS=${APP_KEYS}' >> .env &&
        echo 'API_TOKEN_SALT=${API_TOKEN_SALT}' >> .env &&
        echo 'ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}' >> .env &&
        echo 'TRANSFER_TOKEN_SALT=${TRANSFER_TOKEN_SALT}' >> .env &&
        echo 'DATABASE_CLIENT=${DATABASE_CLIENT}' >> .env &&
        echo 'DATABASE_FILENAME=${DATABASE_FILENAME}' >> .env &&
        echo 'JWT_SECRET=${JWT_SECRET}' >> .env &&
        npm install &&
        npm run build &&
        pm2 restart strapi-test-dev"  # PM2로 실행한 Strapi 애플리케이션 이름 사용
